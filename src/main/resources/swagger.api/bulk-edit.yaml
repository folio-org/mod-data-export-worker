openapi: 3.0.0
info:
  title: Bulk edit API
  version: v1
servers:
  - url: /bulk-edit/
paths:
  /{jobId}/preview:
    get:
      description: Get a list of users for preview
      operationId: getPreviewByJobId
      parameters:
        - name: jobId
          in: path
          required: true
          description: UUID of the JobCommand
          schema:
            $ref: "#/components/schemas/UUID"
        - in: query
          name: limit
          required: true
          schema:
            type: integer
          description: The numbers of users to return
      responses:
        '200':
          description: Collection of users for preview
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/userCollection"
                example: "{}"
        '400':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
                example: Invalid query
        '404':
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
                example: Job not found
        '500':
           description: Internal server errors, e.g. due to misconfiguration
           content:
             text/plain:
               schema:
                 type: string
                 example: Internal server error
  /{jobId}/errors:
    get:
      description: Get a list of errors for preview
      operationId: getErrorsPreviewByJobId
      parameters:
        - name: jobId
          in: path
          required: true
          description: UUID of the JobCommand
          schema:
            $ref: "#/components/schemas/UUID"
        - in: query
          name: limit
          required: true
          schema:
            type: integer
          description: The numbers of users to return
      responses:
        '200':
          description: Collection of users for preview
          content:
            application/json:
              schema:
                $ref: "../../../../folio-export-common/schemas/common/errors.json"
                example: "{}"
        '404':
          description: No found
          content:
            text/plain:
              schema:
                type: string
                example: Job not found
        '500':
          description: Internal server errors, e.g. due to misconfiguration
          content:
            text/plain:
              schema:
                type: string
                example: Internal server error
  /{jobId}/upload:
    post:
      description: Upload csv file
      operationId: uploadCsvFile
      parameters:
        - name: jobId
          in: path
          required: true
          description: UUID of the JobCommand
          schema:
            $ref: "#/components/schemas/UUID"
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "201":
          description: File uploaded
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/json:
              example:
                $ref: "#/components/examples/errors"
              schema:
                $ref: "#/components/schemas/errors"
        "500":
          description: Internal server errors, e.g. due to misconfiguration
          content:
            application/json:
              example:
                $ref: "#/components/examples/errors"
              schema:
                $ref: "#/components/schemas/errors"
  /{jobId}/start:
    post:
      description: Start job
      operationId: startJob
      parameters:
        - name: jobId
          in: path
          required: true
          description: UUID of the JobCommand
          schema:
            $ref: "#/components/schemas/UUID"
      responses:
        "200":
          description: Job is started
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/json:
              example:
                $ref: "#/components/examples/errors"
              schema:
                $ref: "#/components/schemas/errors"
        "404":
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
                example: Job not found
        "500":
          description: Internal server errors, e.g. due to misconfiguration
          content:
            application/json:
              example:
                $ref: "#/components/examples/errors"
              schema:
                $ref: "#/components/schemas/errors"
  /{jobId}/roll-back:
    post:
      description: Roll back csv file
      operationId: rollBackCsvFile
      parameters:
        - name: jobId
          in: path
          required: true
          description: UUID of the JobCommand
          schema:
            $ref: "#/components/schemas/UUID"
      responses:
        "200":
          description: Csv file roll back uploaded
          content:
            text/plain:
              schema:
                type: string
        "500":
          description: Internal server errors, e.g. due to misconfiguration
          content:
            application/json:
              example:
                $ref: "#/components/examples/errors"
              schema:
                $ref: "#/components/schemas/errors"
components:
  schemas:
    UUID:
      type: string
      format: uuid
    errors:
      $ref: '../../../../folio-export-common/schemas/common/errors.json#/Errors'
    userGroupCollections:
      $ref: '../../../../folio-export-common/schemas/user/userGroupCollection.json#/UserGroupCollection'
    addressTypeCollection:
      $ref: '../../../../folio-export-common/schemas/user/addressTypeCollection.json#/AddressTypeCollection'
    proxyForCollection:
      $ref: '../../../../folio-export-common/schemas/user/proxyForCollection.json#/ProxyForCollection'
    departmentCollection:
      $ref: '../../../../folio-export-common/schemas/user/departmentCollection.json#/DepartmentCollection'
    userCollection:
      $ref: '../../../../folio-export-common/schemas/user/userCollection.json'
    itemCollection:
      $ref: '../../../../folio-export-common/schemas/inventory/itemCollection.json#/ItemCollection'
    callNumberType:
      $ref: '../../../../folio-export-common/schemas/inventory/callNumberType.json#/CallNumberType'
    damagedStatus:
      $ref: '../../../../folio-export-common/schemas/inventory/damagedStatus.json#/DamagedStatus'
    noteType:
      $ref: '../../../../folio-export-common/schemas/inventory/itemNoteType.json#/NoteType'
    electronicAccessRelationship:
      $ref: '../../../../folio-export-common/schemas/inventory/electronicAccessRelationship.json#/ElectronicAccessRelationship'
    statisticalCode:
      $ref: '../../../../folio-export-common/schemas/inventory/statisticalCode.json#/StatisticalCode'
  examples:
    errors:
      value:
        $ref: '../../../../folio-export-common/examples/errors.sample'
