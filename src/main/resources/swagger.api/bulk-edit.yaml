openapi: 3.0.0
info:
  title: Bulk edit API
  version: v1
servers:
  - url: /bulk-edit/
paths:
  /{jobId}/upload:
    post:
      description: Upload csv file
      operationId: uploadCsvFile
      parameters:
        - name: jobId
          in: path
          required: true
          description: UUID of the JobCommand
          schema:
            $ref: "#/components/schemas/UUID"
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "201":
          description: File uploaded
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/json:
              example:
                $ref: "#/components/examples/errors"
              schema:
                $ref: "#/components/schemas/errors"
        "500":
          description: Internal server errors, e.g. due to misconfiguration
          content:
            application/json:
              example:
                $ref: "#/components/examples/errors"
              schema:
                $ref: "#/components/schemas/errors"
  /{jobId}/start:
    post:
      description: Start job
      operationId: startJob
      parameters:
        - name: jobId
          in: path
          required: true
          description: UUID of the JobCommand
          schema:
            $ref: "#/components/schemas/UUID"
      responses:
        "200":
          description: Job is started
          content:
            application/json:
              schema:
                type: string
        "400":
          description: Bad Request
          content:
            application/json:
              example:
                $ref: "#/components/examples/errors"
              schema:
                $ref: "#/components/schemas/errors"
        "404":
          description: Bad Request
          content:
            text/plain:
              schema:
                type: string
                example: Job not found
        "500":
          description: Internal server errors, e.g. due to misconfiguration
          content:
            application/json:
              example:
                $ref: "#/components/examples/errors"
              schema:
                $ref: "#/components/schemas/errors"
  /{jobId}/errors:
    get:
      description: Get a list of errors for preview
      operationId: getErrorsPreviewByJobId
      parameters:
        - name: jobId
          in: path
          required: true
          description: UUID of the JobCommand
          schema:
            $ref: "#/components/schemas/UUID"
        - in: query
          name: limit
          required: true
          schema:
            type: integer
          description: The numbers of users to return
      responses:
        '200':
          description: Collection of users for preview
          content:
            application/json:
              example:
                $ref: "#/components/examples/errors"
              schema:
                $ref: "#/components/schemas/errors"
        '404':
          description: No found
          content:
            text/plain:
              schema:
                type: string
                example: Job not found
        '500':
          description: Internal server errors, e.g. due to misconfiguration
          content:
            text/plain:
              schema:
                type: string
                example: Internal server error
  /permissions-self-check:
    get:
      description: Get users permissions
      operationId: getUsersPermissions
      responses:
        '200':
          description:  List of actual users permissions for current tenant
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/userPermission"
        '404':
          description: No found
          content:
            text/plain:
              schema:
                type: string
                example: Desired permissions not found
        '500':
          description: Internal server errors, e.g. due to misconfiguration
          content:
            text/plain:
              schema:
                type: string
                example: Internal server error
components:
  schemas:
    userPermission:
      type: string
    UUID:
      type: string
      format: uuid
    errors:
      $ref: '../../../../folio-export-common/schemas/common/errors.json#/Errors'
    parameter:
      $ref: '../../../../folio-export-common/schemas/common/parameter.json#/Parameter'
    userGroupCollections:
      $ref: '../../../../folio-export-common/schemas/user/userGroupCollection.json#/UserGroupCollection'
    addressTypeCollection:
      $ref: '../../../../folio-export-common/schemas/user/addressTypeCollection.json#/AddressTypeCollection'
    proxyForCollection:
      $ref: '../../../../folio-export-common/schemas/user/proxyForCollection.json#/ProxyForCollection'
    departmentCollection:
      $ref: '../../../../folio-export-common/schemas/user/departmentCollection.json#/DepartmentCollection'
    userCollection:
      $ref: '../../../../folio-export-common/schemas/user/userCollection.json#/UserCollection'
    itemCollection:
      $ref: '../../../../folio-export-common/schemas/inventory/itemCollection.json#/ItemCollection'
    callNumberType:
      $ref: '../../../../folio-export-common/schemas/inventory/callNumberType.json#/CallNumberType'
    damagedStatus:
      $ref: '../../../../folio-export-common/schemas/inventory/damagedStatus.json#/DamagedStatus'
    noteType:
      $ref: '../../../../folio-export-common/schemas/inventory/itemNoteType.json#/NoteType'
    electronicAccessRelationship:
      $ref: '../../../../folio-export-common/schemas/inventory/electronicAccessRelationship.json#/ElectronicAccessRelationship'
    statisticalCode:
      $ref: '../../../../folio-export-common/schemas/inventory/statisticalCode.json#/StatisticalCode'
    itemLocationCollection:
      $ref: '../../../../folio-export-common/schemas/inventory/locationCollection.json#/ItemLocationCollection'
    callNumberTypes:
      $ref: '../../../../folio-export-common/schemas/inventory/callNumberTypeCollection.json#/CallNumberTypeCollection'
    damagedStatuses:
      $ref: '../../../../folio-export-common/schemas/inventory/damagedStatusCollection.json#/DamagedStatusCollection'
    noteTypes:
      $ref: '../../../../folio-export-common/schemas/inventory/itemNoteTypeCollection.json#/NoteTypeCollection'
    materialTypes:
      $ref: '../../../../folio-export-common/schemas/inventory/materialTypeCollection.json#/MaterialTypeCollection'
    briefHoldings:
      $ref: '../../../../folio-export-common/schemas/inventory/briefHoldingCollection.json#/BriefHoldingsRecordCollection'
    briefInstances:
      $ref: '../../../../folio-export-common/schemas/inventory/briefInstanceCollection.json#/BriefInstanceCollection'
    loanTypes:
      $ref: '../../../../folio-export-common/schemas/inventory/loanTypeCollection.json#/LoanTypeCollection'
    electronicAccessRelationShips:
      $ref: '../../../../folio-export-common/schemas/inventory/electronicAccessRelationshipCollection.json#/ElectronicAccessRelationshipCollection'
    statisticalCodes:
      $ref: '../../../../folio-export-common/schemas/inventory/statisticalCodeCollection.json#/StatisticalCodeCollection'
    customFieldCollection:
      $ref: '../../../../folio-export-common/schemas/user/customFieldCollection.json#/CustomFieldCollection'
    holdingsRecordCollection:
      $ref: '../../../../folio-export-common/schemas/inventory/holdingsRecordCollection.json#/HoldingsRecordCollection'
    holdingsTypeCollection:
      $ref: '../../../../folio-export-common/schemas/inventory/holdingsTypeCollection.json#/HoldingsTypeCollection'
    holdingsNoteTypeCollection:
      $ref: '../../../../folio-export-common/schemas/inventory/holdingsNoteTypeCollection.json#/HoldingsNoteTypeCollection'
    illPolicyCollection:
      $ref: '../../../../folio-export-common/schemas/inventory/illPolicyCollection.json#/IllPolicyCollection'
    holdingsRecordsSourceCollection:
      $ref: '../../../../folio-export-common/schemas/inventory/holdingsRecordsSourceCollection.json#/HoldingsRecordsSourceCollection'
    holdingsContentUpdateCollection:
      $ref: '../../../../folio-export-common/schemas/bulk-edit/holdingsContentUpdateCollection.json#/HoldingsContentUpdateCollection'
    instance:
      $ref: '../../../../folio-export-common/schemas/inventory-storage/instance.json#/Instance'
    instanceCollection:
      $ref: '../../../../folio-export-common/schemas/inventory-storage/instanceCollection.json#/InstanceCollection'
    formatOfInstance:
      $ref: '../../../../folio-export-common/schemas/inventory-storage/formatOfInstance.json#/FormatOfInstance'
    classificationType:
      $ref: '../../../../folio-export-common/schemas/inventory-storage/classificationType.json#/ClassificationType'
    contributorNameType:
      $ref: '../../../../folio-export-common/schemas/inventory-storage/contributorNameType.json#/ContributorNameType'
    instanceStatus:
      $ref: '../../../../folio-export-common/schemas/inventory/instanceStatus.json#/InstanceStatus'
    issuanceMode:
      $ref: '../../../../folio-export-common/schemas/inventory/issuanceMode.json#/IssuanceMode'
    instanceType:
      $ref: '../../../../folio-export-common/schemas/inventory/instanceType.json#/InstanceType'
    natureOfContentTerm:
      $ref: '../../../../folio-export-common/schemas/inventory/natureOfContentTerm.json#/NatureOfContentTerm'
    identifierTypeReference:
      $ref: '../../../../folio-export-common/schemas/inventory/identifierTypeReference.json#/IdentifierTypeReference'
    IdentifierTypeReferenceCollection:
      $ref: '../../../../folio-export-common/schemas/inventory/identifierTypeReferenceCollection.json#/IdentifierTypeReferenceCollection'
    InstanceNoteType:
      $ref: '../../../../folio-export-common/schemas/inventory/instanceNoteType.json#/InstanceNoteType'
    ConsortiumItemCollection:
      $ref: '../../../../folio-export-common/schemas/search/consortiumItemCollection.json#/ConsortiumItemCollection'
    ConsortiumItem:
      $ref: '../../../../folio-export-common/schemas/search/consortiumItem.json#/ConsortiumItem'
    ConsortiumHoldingCollection:
      $ref: '../../../../folio-export-common/schemas/search/consortiumHoldingCollection.json#/ConsortiumHoldingCollection'
    ConsortiumHolding:
      $ref: '../../../../folio-export-common/schemas/search/consortiumHolding.json#/ConsortiumHolding'
    BatchIdsDto:
      $ref: '../../../../folio-export-common/schemas/search/batchIds.json#/BatchIdsDto'
    ExtendedItem:
      $ref: '../../../../folio-export-common/schemas/inventory/extendedItem.json#/ExtendedItem'
    ExtendedItemCollection:
      $ref: '../../../../folio-export-common/schemas/inventory/extendedItemCollection.json#/ExtendedItemCollection'
    ExtendedHoldingsRecordCollection:
      $ref: '../../../../folio-export-common/schemas/inventory/extendedHoldingsRecordCollection.json#/ExtendedHoldingsRecordCollection'
    ExtendedHoldingsRecord:
      $ref: '../../../../folio-export-common/schemas/inventory/extendedHoldingsRecord.json#/ExtendedHoldingsRecord'
    ExtendedInstance:
      $ref: '../../../../folio-export-common/schemas/inventory-storage/extendedInstance.json#/ExtendedInstance'
    UserTenant:
      $ref: '../../../../folio-export-common/schemas/consortia/userTenant.json#/UserTenant'
    UserTenantCollection:
      $ref: '../../../../folio-export-common/schemas/consortia/userTenantCollection.json#/UserTenantCollection'
  examples:
    errors:
      value:
        $ref: '../../../../folio-export-common/examples/errors.sample'
