spring:
  application:
    name: mod-data-export-worker
  liquibase:
    changeLog: classpath:db/changelog/data-export-worker-changelog-master.xml
    enabled: true
  batch:
    job:
      enabled: false
    initializer:
      enabled: false
  kafka:
    listener:
      concurrency: ${KAFKA_CONCURRENCY_LEVEL:30}
application:
  kafka:
    topic-configuration:
      "data-export.job.update":
        partitions: 50
      "edi-export-history.create":
        partitions: 1
    topic-pattern: (${ENV:folio}\.)?(.*\.)?data-export.job.command
    group-id: ${ENV:folio}-mod-data-export-worker-events-group
  bucket:
    size: ${BUCKET_SIZE:50}
  minio-remote:
    endpoint: http://${embedded.minio.host}:${embedded.minio.port}/
    region: ${AWS_REGION:region}
    bucket: ${AWS_BUCKET:remote-files-test}
    accessKey: ${AWS_ACCESS_KEY_ID:AKIAIOSFODNN7EXAMPLE}
    secretKey: ${AWS_SECRET_ACCESS_KEY:wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY}
    composeWithAwsSdk: ${LOCAL_FS_COMPOSE_WITH_AWS_SDK:false}
  minio-local:
    endpoint: http://${embedded.minio.host}:${embedded.minio.port}/
    region: ${LOCAL_FS_REGION:region}
    bucket: ${LOCAL_FS_BUCKET:local-files-test}
    accessKey: ${LOCAL_FS_ACCESS_KEY_ID:AKIAIOSFODNN7EXAMPLE}
    secretKey: ${LOCAL_FS_SECRET_ACCESS_KEY:wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY}
    composeWithAwsSdk: ${LOCAL_FS_COMPOSE_WITH_AWS_SDK:false}
  e-holdings-batch:
    job-chunk-size: 2
    kb-ebsco-chunk-size: 2
folio:
  tenant:
    validation:
      enabled: true
